{"version":3,"file":"static/js/MoviesCard.762cdb6e.chunk.js","mappings":"+QACA,EAA4B,mCAA5B,EAAwE,gCAAxE,EAA+G,8BAA/G,EAAyJ,mCAAzJ,EAAiN,4CAAjN,EAA4Q,sCCgC5Q,IACA,EAAe,IAA0B,gE,SCmBzC,EAhDwB,SAAC,GAQlB,IAPLA,EAOI,EAPJA,cACAC,EAMI,EANJA,YACAC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,IAEA,OACE,iCACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAKD,UAAU,iBAAf,WACE,oBAAQE,KAAK,SAASF,UAAWC,EAAUE,QAASV,EAApD,WACE,gBAAKW,IAAKC,EAAKC,MAAM,KAAKN,UAAWC,EAAQM,IAAI,eADnD,cAKA,gBACEH,IAAG,yCAAoCV,GACvCa,IAAKZ,EACLK,UAAWC,QAGf,iBAAKD,UAAWC,EAAhB,WACE,wBAAKN,KACL,wCAA+B,GAAfC,EAAhB,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAG7C,iBAAKX,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASW,GAAE,UAAKb,EAAL,SAAX,qBAEF,yBACE,SAAC,KAAD,CAASa,GAAE,UAAKb,EAAL,YAAX,iCCjCNc,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,gCAGIC,GAAUD,EAAAA,EAAAA,OAAK,kBACnB,iCA4DF,EAzDkB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACArB,GAAQuB,EAAAA,EAAAA,MAARvB,IACFwB,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACR,IAMMC,EAAa,mCAAG,sGALpBC,IAAAA,SAAAA,QAAA,6CAA+DP,EAA/D,6CACiBO,IAAAA,MAIG,gBACZC,EADY,EACZA,KACRT,EAASS,GAFW,2CAAH,qDAInBF,MACC,CAACN,IAEJ,IAQQ1B,EAAuDwB,EAAvDxB,YAAaC,EAA0CuB,EAA1CvB,MAAOC,EAAmCsB,EAAnCtB,aAAcC,EAAqBqB,EAArBrB,SAAUC,EAAWoB,EAAXpB,OAEpD,OACEH,IACE,iCACE,SAAC,EAAD,CACEF,cAdc,WAChBuB,EACFO,EAAQM,KAAKb,GAGfO,EAAQM,KAAK,MAUPnC,YAAaA,EACbC,MAAOA,EACPC,aAAcA,EACdC,SAAUA,EACVC,OAAQA,EACRC,IAAKA,KAEP,SAAC,EAAA+B,SAAD,CAAUC,UAAU,8EAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAI,UAAKjC,EAAL,SAAX,UACE,SAACc,EAAD,CAAMO,QAASA,OAEjB,SAAC,KAAD,CAAOY,KAAI,UAAKjC,EAAL,YAAX,UACE,SAACgB,EAAD,CAASK,QAASA","sources":["webpack://react-homework-template/./src/components/RenderMovieCard/RenderMovieCard.module.css?7bca","components/RenderMovieCard/arrow-left2.svg","components/RenderMovieCard/RenderMovieCard.js","views/MovieCard.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RenderMovieCard_container__Zxrf2\",\"button\":\"RenderMovieCard_button__fpafE\",\"icon\":\"RenderMovieCard_icon__mI2LO\",\"imgPoster\":\"RenderMovieCard_imgPoster__EjzrK\",\"descriptionWrapper\":\"RenderMovieCard_descriptionWrapper__7jFkI\",\"AddContainer\":\"RenderMovieCard_AddContainer__R2MQi\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowLeft2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow-left2\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft2);\nexport default __webpack_public_path__ + \"static/media/arrow-left2.aab4f4cb76b5866cac53aba872eaf928.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from 'react-router-dom';\nimport s from './RenderMovieCard.module.css';\nimport svg from './arrow-left2.svg';\nimport PropTypes from 'prop-types';\n\nconst RenderMovieCard = ({\n  onClickGoBack,\n  poster_path,\n  title,\n  vote_average,\n  overview,\n  genres,\n  url,\n}) => {\n  return (\n    <>\n      <div className={s.container}>\n        <div className=\"poster-wrapper\">\n          <button type=\"button\" className={s.button} onClick={onClickGoBack}>\n            <img src={svg} width=\"15\" className={s.icon} alt=\"left-arrow\" />\n            Go back\n          </button>\n\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            className={s.imgPoster}\n          />\n        </div>\n        <div className={s.descriptionWrapper}>\n          <h2>{title}</h2>\n          <p>User Score: {vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n      <div className={s.AddContainer}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to={`${url}/Cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`${url}/Reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default RenderMovieCard;\n\nRenderMovieCard.propTypes = {\n  onClickGoBack: PropTypes.func.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    })\n  ),\n\n  url: PropTypes.string.isRequired,\n};\n","import {\n  useRouteMatch,\n  Route,\n  Switch,\n  useHistory,\n  useParams,\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RenderMovieCard from 'components/RenderMovieCard';\n\nconst Cast = lazy(() =>\n  import('components/Cast' /* webpackChunkName: \"Cast\" */)\n);\n\nconst Reviews = lazy(() =>\n  import('components/Reviews' /* webpackChunkName: \"Reviews\" */)\n);\n\nconst MovieCard = ({ pathToGoBack }) => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchMovieCard = () => {\n      axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=81b3ecea3e846c75ec6e45ca643cbb3c`;\n      const response = axios.get();\n      return response;\n    };\n\n    const MakeMovieCard = async () => {\n      const { data } = await fetchMovieCard();\n      setMovie(data);\n    };\n    MakeMovieCard();\n  }, [movieId]);\n\n  const onClickGoBack = () => {\n    if (pathToGoBack) {\n      history.push(pathToGoBack);\n      return;\n    }\n    history.push('/');\n  };\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    title && (\n      <>\n        <RenderMovieCard\n          onClickGoBack={onClickGoBack}\n          poster_path={poster_path}\n          title={title}\n          vote_average={vote_average}\n          overview={overview}\n          genres={genres}\n          url={url}\n        />\n        <Suspense fallback={<div>Загрузка</div>}>\n          <Switch>\n            <Route path={`${url}/Cast`}>\n              <Cast movieId={movieId} />\n            </Route>\n            <Route path={`${url}/Reviews`}>\n              <Reviews movieId={movieId} />\n            </Route>\n          </Switch>\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  pathToGoBack: PropTypes.string.isRequired,\n};\n"],"names":["onClickGoBack","poster_path","title","vote_average","overview","genres","url","className","s","type","onClick","src","svg","width","alt","map","genre","name","join","to","Cast","lazy","Reviews","pathToGoBack","useState","movie","setMovie","movieId","useParams","useRouteMatch","history","useHistory","useEffect","MakeMovieCard","axios","data","push","Suspense","fallback","path"],"sourceRoot":""}